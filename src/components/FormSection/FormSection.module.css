.mainContainer {
	background: var(--color-white);
	padding: 30px 20px;
	flex: 1;
}

.mainContainer button:not(.clearAllButton),
.mainContainer input:not([type="radio"]),
.radioLabel {
	height: 2.5rem;
	width: 100%;
	font-weight: 700;
}

.clearAllButton {
	text-decoration: underline;
	margin-bottom: 20px;
}

.inputAndPlacholderWrapper {
	display: flex;
	border-radius: var(--border-radius-small);
	overflow: hidden;
}

.inputAndPlacholderWrapper:not(.amountField) {
	justify-content: space-between;
}

.inputAndPlacholderWrapper:has(input[type="number"]:focus) {
	border-color: var(--color-lime);
}

input[type="number"] {
	border: none;
	padding: 0 15px;
	-moz-appearance: textfield; /* Remove steppers from number-inputs (Firefox) */	
}

/* Remove steppers from number-inputs */
/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
	-webkit-appearance: none;
	margin: 0;
}

.mainContainer input,
.mainContainer .radioLabel {
	cursor: pointer;
}

input[type="number"]:focus-visible {
	outline: none;
}

label:not(.radioLabel),
.placeholder,
.radioButtons,
.clearAllButton {
	color: grey;
}

.amountField {
	border: 1px solid black;
}

.placeholder {
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0 15px;
	background: rgb(214, 236, 243);
}

.repaymentLabel,
.interestLabel {
	width: 100%;
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 10px;
	color: black;
	padding: 10px;
	margin-bottom: 5px;
	border: 1px solid grey;
	border-radius: var(--border-radius-small);
}

.radioLabel:has(input:checked) {
	background: hsl(61, 70%, 52%, 20%);
	border-color: var(--color-lime);
}

.radioButtons {
	margin-bottom: 30px;
}

.calcButton {
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 10px;
	border-radius: var(--border-radius-large);
	padding: 5px 30px;
	background: var(--color-lime);
}

.calcButton::before {
	content: url(../../assets/images/icon-calculator.svg);
	position: relative;
	top: 3px;
}

/* ---- Errors ----- */
.mainContainer p {
	margin-bottom: 30px;
	color: var(--color-red);
}

.errorState,
.errorState:has(input[type="number"]:focus) {
	border-color: var(--color-red);
}

.errorStatePlaceholder {
	background: hsl(4, 69%, 50%, 20%);
}

/* ---- DESKTOP ------ */

@media screen and (min-width: 600px) {
	.mainContainer {
		padding: 30px;
	}

	.termRateWrapper {
		display: flex;
		gap: 20px;
	}
}
